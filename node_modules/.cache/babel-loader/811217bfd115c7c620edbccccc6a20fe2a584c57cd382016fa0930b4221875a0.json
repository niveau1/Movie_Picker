{"ast":null,"code":"var _jsxFileName = \"C:\\\\Local\\\\Projet_Perso\\\\React\\\\movie-picker\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useImperativeHandle } from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport Filtre from \"./Filtre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [genre, setGenre] = useState(0);\n  const [filtre, setFiltre] = useState(\"all\");\n  const handleGenre = event => {\n    setGenre(event.target.value);\n  };\n  const handleFiltre = event => {\n    setFiltre(event.target.value);\n  };\n  /*\r\n  const fetchMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const url =  \"https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false\"\r\n    if(genre) {\r\n        console.log(genre);\r\n        console.log(\"not null\");\r\n    }\r\n    if(filtre) {\r\n        console.log(filtre);\r\n        console.log(\"filtre no null\");\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        \"https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n        const data = await response.json();\r\n      //console.log(data);\r\n      const transformedMovies = data.results.map((movieData) => {\r\n        //console.log(movieData);\r\n        return {\r\n          id: movieData.id,\r\n          name: movieData.original_name,\r\n          overview: movieData.overview,\r\n          poster_path: movieData.poster_path,\r\n        };\r\n      });\r\n      setMovies(transformedMovies);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, [filtre]);\r\n    useEffect(() => {\r\n    fetchMoviesHandler();\r\n  }, [fetchMoviesHandler]);\r\n  */\n  useEffect(() => {\n    const fetchMovieData = async () => {\n      setIsLoading(true);\n      setError(null);\n      const url_prefix = \"https://api.themoviedb.org/3/discover/movie?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1\";\n      let url = url_prefix;\n      if (genre !== 0 && filtre !== \"all\") {\n        console.log(genre);\n        url = url_prefix + \"&with_genres=\" + genre;\n      }\n      if (filtre !== \"all\") {\n        url = \"https://api.themoviedb.org/3/movie/\" + filtre + \"?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US\";\n      }\n      console.log(url);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        const data = await response.json();\n        const transformedMovies = data.results.map(movieData => {\n          //console.log(movieData);\n          return {\n            id: movieData.id,\n            name: movieData.original_name,\n            overview: movieData.overview,\n            poster_path: movieData.poster_path\n          };\n        });\n        setMovies(transformedMovies);\n      } catch (error) {\n        setError(error.message);\n      }\n      setIsLoading(false);\n    };\n    fetchMovieData();\n  }, [genre, filtre]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(Filtre, {\n        selectOption: genre,\n        handleOption: handleGenre,\n        selectionFiltre: filtre,\n        handleFiltreOption: handleFiltre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"RXTsbNIrbbyWr92zByJLh/cehu0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useImperativeHandle","MoviesList","Filtre","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","isLoading","setIsLoading","error","setError","genre","setGenre","filtre","setFiltre","handleGenre","event","target","value","handleFiltre","fetchMovieData","url_prefix","url","console","log","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","name","original_name","overview","poster_path","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","class","selectOption","handleOption","selectionFiltre","handleFiltreOption","_c","$RefreshReg$"],"sources":["C:/Local/Projet_Perso/React/movie-picker/src/components/Home.js"],"sourcesContent":["import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n  useImperativeHandle,\r\n} from \"react\";\r\n\r\nimport MoviesList from \"./MoviesList\";\r\nimport Filtre from \"./Filtre\";\r\n\r\nfunction Home() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [genre, setGenre] = useState(0);\r\n  const [filtre, setFiltre] = useState(\"all\");\r\n\r\n  const handleGenre = (event) => {\r\n    setGenre(event.target.value);\r\n  };\r\n\r\n  const handleFiltre = (event) => {\r\n    setFiltre(event.target.value);\r\n  };\r\n  /*\r\n  const fetchMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const url =  \"https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false\"\r\n    if(genre) {\r\n        console.log(genre);\r\n        console.log(\"not null\");\r\n    }\r\n    if(filtre) {\r\n        console.log(filtre);\r\n        console.log(\"filtre no null\");\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        \"https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      //console.log(data);\r\n      const transformedMovies = data.results.map((movieData) => {\r\n        //console.log(movieData);\r\n        return {\r\n          id: movieData.id,\r\n          name: movieData.original_name,\r\n          overview: movieData.overview,\r\n          poster_path: movieData.poster_path,\r\n        };\r\n      });\r\n      setMovies(transformedMovies);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, [filtre]);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesHandler();\r\n  }, [fetchMoviesHandler]);\r\n  */\r\n  useEffect(() => {\r\n    const fetchMovieData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const url_prefix =\r\n        \"https://api.themoviedb.org/3/discover/movie?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1\";\r\n      let url = url_prefix;\r\n      if (genre!== 0 && filtre!==\"all\") {\r\n        console.log(genre);\r\n        url = url_prefix + \"&with_genres=\" + genre;\r\n      }\r\n      if (filtre!==\"all\") {\r\n        url = \"https://api.themoviedb.org/3/movie/\"+filtre+\"?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US\";\r\n      }\r\n      console.log(url)\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const data = await response.json();\r\n        const transformedMovies = data.results.map((movieData) => {\r\n          //console.log(movieData);\r\n          return {\r\n            id: movieData.id,\r\n            name: movieData.original_name,\r\n            overview: movieData.overview,\r\n            poster_path: movieData.poster_path,\r\n          };\r\n        });\r\n        setMovies(transformedMovies);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchMovieData();\r\n  }, [genre, filtre]);\r\n\r\n  let content = <p>Found no movies.</p>;\r\n\r\n  if (movies.length > 0) {\r\n    content = <MoviesList movies={movies} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <section class=\"header\"></section>\r\n      <section>\r\n        <Filtre\r\n          selectOption={genre}\r\n          handleOption={handleGenre}\r\n          selectionFiltre={filtre}\r\n          handleFiltreOption={handleFiltre}\r\n        ></Filtre>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}