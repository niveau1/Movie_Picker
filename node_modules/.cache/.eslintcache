[{"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\index.js":"1","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\App.js":"2","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Home.js":"3","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\MoviesList.js":"4","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Filtre.js":"5","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Movie.js":"6","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Details.js":"7"},{"size":206,"mtime":1668435751000,"results":"8","hashOfConfig":"9"},{"size":254,"mtime":1685630570531,"results":"10","hashOfConfig":"9"},{"size":2546,"mtime":1685630771467,"results":"11","hashOfConfig":"9"},{"size":426,"mtime":1685559829513,"results":"12","hashOfConfig":"9"},{"size":1850,"mtime":1685630668125,"results":"13","hashOfConfig":"9"},{"size":426,"mtime":1685562292461,"results":"14","hashOfConfig":"9"},{"size":2074,"mtime":1685627426498,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xgyxds",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\index.js",[],[],"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\App.js",["38","39","40","41"],[],"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Home.js",["42","43","44"],[],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n  useImperativeHandle,\r\n} from \"react\";\r\n\r\nimport MoviesList from \"./MoviesList\";\r\nimport Filtre from \"./Filtre\";\r\n\r\nfunction Home() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [genre, setGenre] = useState(0);\r\n  const [filtre, setFiltre] = useState(\"all\");\r\n\r\n  const handleGenre = (event) => {\r\n    setGenre(event.target.value);\r\n    setFiltre(\"all\");\r\n  };\r\n\r\n  const handleFiltre = (event) => {\r\n    setFiltre(event.target.value);\r\n    setGenre(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMovieData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const url_prefix =\r\n        \"https://api.themoviedb.org/3/discover/movie?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US&sort_by=popularity.desc&page=1\";\r\n      let url = url_prefix;\r\n      if (genre!== 0) {\r\n        url = url_prefix + \"&with_genres=\" + genre;\r\n      }\r\n      \r\n      if (filtre!==\"all\") {\r\n        url = \"https://api.themoviedb.org/3/movie/\"+filtre+\"?api_key=92b418e837b833be308bbfb1fb2aca1e&language=en-US\";\r\n      }\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const data = await response.json();\r\n        const transformedMovies = data.results.map((movieData) => {\r\n          //console.log(movieData);\r\n          return {\r\n            id: movieData.id,\r\n            name: movieData.original_name,\r\n            overview: movieData.overview,\r\n            poster_path: movieData.poster_path,\r\n          };\r\n        });\r\n        setMovies(transformedMovies);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchMovieData();\r\n  }, [genre, filtre]);\r\n\r\n  let content = <p>Found no movies.</p>;\r\n\r\n  if (movies.length > 0) {\r\n    content = <MoviesList movies={movies} />;\r\n  }\r\n\r\n  if (error) {\r\n    content = <p>{error}</p>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <section class=\"header\"></section>\r\n      <section>\r\n        <Filtre\r\n          selectOption={genre}\r\n          handleOption={handleGenre}\r\n          selectionFiltre={filtre}\r\n          handleFiltreOption={handleFiltre}\r\n        ></Filtre>\r\n      </section>\r\n      <section>{content}</section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\MoviesList.js",[],[],"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Filtre.js",["45","46","47","48","49"],[],"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Movie.js",[],[],"C:\\Local\\Projet_Perso\\React\\movie-picker\\src\\components\\Details.js",["50"],[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":1,"column":27,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"56","line":1,"column":38,"nodeType":"53","messageId":"54","endLine":1,"endColumn":49},{"ruleId":"51","severity":1,"message":"57","line":1,"column":51,"nodeType":"53","messageId":"54","endLine":1,"endColumn":58},{"ruleId":"51","severity":1,"message":"56","line":4,"column":3,"nodeType":"53","messageId":"54","endLine":4,"endColumn":14},{"ruleId":"51","severity":1,"message":"57","line":5,"column":3,"nodeType":"53","messageId":"54","endLine":5,"endColumn":10},{"ruleId":"51","severity":1,"message":"58","line":6,"column":3,"nodeType":"53","messageId":"54","endLine":6,"endColumn":22},{"ruleId":"51","severity":1,"message":"55","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"59","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":12},{"ruleId":"51","severity":1,"message":"60","line":7,"column":21,"nodeType":"53","messageId":"54","endLine":7,"endColumn":31},{"ruleId":"51","severity":1,"message":"61","line":15,"column":11,"nodeType":"53","messageId":"54","endLine":15,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":35,"column":8,"nodeType":"64","endLine":35,"endColumn":10,"suggestions":"65"},{"ruleId":"51","severity":1,"message":"56","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":28},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'useImperativeHandle' is defined but never used.","'Home' is defined but never used.","'setFiltres' is assigned a value but never used.","'fetchGenres' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'genres'. Either include it or remove the dependency array. You can also do a functional update 'setGenres(g => ...)' if you only need 'genres' in the 'setGenres' call.","ArrayExpression",["66"],{"desc":"67","fix":"68"},"Update the dependencies array to be: [genres]",{"range":"69","text":"70"},[1196,1198],"[genres]"]